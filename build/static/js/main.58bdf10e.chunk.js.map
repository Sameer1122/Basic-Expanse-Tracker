{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Filter/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpenseChart.js","components/Expenses/Expenses.js","components/AddExpense/ExpenseForm.js","components/AddExpense/NewExpense.js","components/UI/Navbar.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseDate","month","time","toLocaleString","day","year","getFullYear","ExpenesItem","title","item","ExpensesList","expanses","length","map","expense","id","ExpensesFilter","value","dateValue","onChange","event","passExpanse","target","Chartbar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","console","log","ExpenseChart","chartDataPoints","expenses","getMonth","Expenses","useState","amount","setAmount","showByYear","filter","toString","expenseData","ExpenseForm","nulled","setNulled","nulled2","setNulled2","titleChange","setTitleChange","amountChange","setAmountChange","dateChange","setDateChange","action","onSubmit","preventDefault","userInput","random","Date","trim","onNewExpanse","htmlFor","placeholder","type","color","min","step","onClick","hide","NewExpense","show","setShow","Navbar","class","DUMMTDATA","App","setExpanses","inputData","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58bdf10e.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Card.css'\r\n\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n  return (\r\n    <div className = {classes}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport './ExpenseDate.css'\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.time.toLocaleString(\"en-US\", {month: 'long'});\r\n  const day = props.time.toLocaleString(\"en-US\",{day: \"2-digit\"});\r\n  const year = props.time.getFullYear();\r\n  return (\r\n      <div className = \"expense-date\"> \r\n        <div className = \"expense-date__month\">{month}</div>\r\n        <div className = \"expense-date__year\">{year}</div>\r\n        <div className = \"expense-date__day\">{day}</div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default ExpenseDate\r\n","import \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nconst ExpenesItem = (props) => {\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate time={props.time} />\r\n\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">${props.item}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenesItem;\r\n","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.expanses.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No Expanses Found!</h2>;\r\n  }\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.expanses.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          item={expense.item}\r\n          time={expense.time}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const expenseYearHandler = (event) => {\r\n    props.passExpanse(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.dateValue} onChange={expenseYearHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst Chartbar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chartbar;\r\n","import React from \"react\";\r\nimport \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n      {console.log(dataPointValues)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpenseChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan.\", value: 0 },\r\n    { label: \"Feb.\", value: 0 },\r\n    { label: \"Mar.\", value: 0 },\r\n    { label: \"Apr.\", value: 0 },\r\n    { label: \"May.\", value: 0 },\r\n    { label: \"jun.\", value: 0 },\r\n    { label: \"jul.\", value: 0 },\r\n    { label: \"Aug.\", value: 0 },\r\n    { label: \"Sep.\", value: 0 },\r\n    { label: \"Oct.\", value: 0 },\r\n    { label: \"Nov.\", value: 0 },\r\n    { label: \"Dec.\", value: 0 },\r\n  ];\r\n  for (const expense of props.expenses) {\r\n    const element = expense.time.getMonth();\r\n    chartDataPoints[element].value += expense.item;\r\n  }\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpenseChart;\r\n","import React, { useState } from \"react\";\r\nimport \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesFilter from \"../Filter/ExpensesFilter\";\r\nimport ExpenseChart from \"./ExpenseChart\";\r\n\r\nconst Expenses = (props) => {\r\n  const [amount, setAmount] = useState(\"2020\");\r\n  const amountHandler = (expenseData) => {\r\n    setAmount(expenseData);\r\n  };\r\n  const showByYear = props.expanses.filter((expense) => {\r\n    return expense.time.getFullYear().toString() === amount;\r\n  });\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter passExpanse={amountHandler} dateValue={amount} />\r\n        <ExpenseChart expenses={showByYear} />\r\n        <ExpensesList expanses={showByYear} />\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [nulled, setNulled] = useState(true);\r\n  const [nulled2, setNulled2] = useState(true);\r\n  const [titleChange, setTitleChange] = useState(\"\");\r\n  const [amountChange, setAmountChange] = useState(\"\");\r\n  const [dateChange, setDateChange] = useState(\"\");\r\n  const titleChangeHandler = (event) => {\r\n    if (event.target.value.trim().length > 0) {\r\n      setNulled(true);\r\n    }\r\n    setTitleChange(event.target.value);\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    if (event.target.value.trim().length > 0) {\r\n      setNulled2(true);\r\n    }\r\n    setAmountChange(event.target.value);\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    console.log(event.target.value);\r\n    setDateChange(event.target.value);\r\n  };\r\n  //submit handler\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const userInput = {\r\n      id: Math.random().toString(),\r\n      title: titleChange,\r\n      item: amountChange,\r\n      time: new Date(dateChange),\r\n    };\r\n    if (userInput.title.trim().length === 0) {\r\n      console.log(\"this is working\");\r\n      setNulled(false);\r\n    }\r\n    if (userInput.item.toString().trim().length === 0) {\r\n      console.log(\"this is also working\");\r\n      setNulled2(false);\r\n      return;\r\n    }\r\n    props.onNewExpanse(userInput);\r\n    setTitleChange(\"\");\r\n    setAmountChange(\"\");\r\n    setDateChange(\"\");\r\n  };\r\n  return (\r\n    <form action=\"\" onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className={`new-expense__control ${!nulled && \" invalid\"}`}>\r\n          <label htmlFor=\"\"> Title</label>\r\n          <input\r\n            placeholder=\"Enter The Title of Expense\"\r\n            type=\"text\"\r\n            onChange={titleChangeHandler}\r\n            value={titleChange}\r\n          />\r\n          {!nulled && <p style={{ color: \"red\" }}>Please Enter Title</p>}\r\n        </div>\r\n        <div className={`new-expense__control ${!nulled2 && \" invalid\"}`}>\r\n          <label htmlFor=\"\"> Amount</label>\r\n          <input\r\n            placeholder=\"Enter your Amount\"\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={amountChangeHandler}\r\n            value={amountChange}\r\n          />\r\n          {!nulled2 && <p style={{ color: \"red\" }}>Please Enter Amount</p>}\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"\"> Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2017-01-01\"\r\n            max=\"2022-01-01\"\r\n            onChange={dateChangeHandler}\r\n            value={dateChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.hide}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [show, setShow] = useState(false);\r\n  const newexpanse = (expenseData) => {\r\n    props.onNewExpanse(expenseData);\r\n    setShow(false);\r\n  };\r\n  const toggle = () => {\r\n    setShow(true);\r\n  };\r\n  const toggleStop = () => {\r\n    setShow(false);\r\n  };\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!show && <button onClick={toggle}>Add Expenses</button>}\r\n      {show && <ExpenseForm onNewExpanse={newexpanse} hide={toggleStop} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div class=\"container2\">\r\n      <h2>SH Expense tracker</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/AddExpense/NewExpense\";\nimport NavBar from \"./components/UI/Navbar\";\nimport \"./App.css\";\n\nconst DUMMTDATA = [\n  {\n    id: \"1\",\n    title: \"Car Insurance\",\n    item: \"294\",\n    time: new Date(2019, 7, 3),\n  },\n  {\n    id: \"2\",\n    title: \"Piano\",\n    item: \"399\",\n    time: new Date(2021, 3, 13),\n  },\n  {\n    id: \"3\",\n    title: \"Guitar \",\n    item: \"100.14\",\n    time: new Date(2021, 1, 29),\n  },\n  {\n    id: \"4\",\n    title: \"Laptop\",\n    item: \"799\",\n    time: new Date(2021, 4, 23),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpanses] = useState(DUMMTDATA);\n\n  const newexpanse = (inputData) => {\n    // console.log(expenses)\n    // console.log(inputData)\n    setExpanses((prevExpenses) => {\n      return [inputData, ...prevExpenses];\n    });\n  };\n  return (\n    <div class=\"container\">\n      <NavBar></NavBar>\n      <NewExpense onNewExpanse={newexpanse} />\n      <Expenses expanses={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}